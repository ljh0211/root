@반복문

반복문은 프로그램코드 안에서 반복적인 명령(패턴)
수행하는 제어 프로그램이다.
반복적으로 코드에[ 개수만큼 출력하는 것이 아니라
출력한느 만큼의 단위를 관꼐연산자의 조건으로
처리를 해준다면 조건만큼 제어하면서 코드를 출력할수 있다

@반복문의 종류
-for문
1) 조건을 만족한는 동안 블록{}반복한다
2) 반복횟수를 알아야 동작한다
3)표현 방법

for(int i =1 ; i<=5; i++){
System.out.println(i);
//1 : 초기값
}
1.초기화식 : 최초 실행시 시작값을 부형하는 방법
2. 조건식 : 반복문으ㅢ 반복수행여부(=true)를
확인하는 식이다/ *조건이 참 이면 계속반복!
3.실행식:반복문의 수행되어야할 명령문이다.
4.증감식:반복문의 수행시 마지막 초기값을 증가하거나 감소시킨다.
4)for문의 다양한 표현방법
1.for ( ; ; ) : 조건식이 항상 true : 무한반복
2.for (int i=1 ; i<=10;i++){..} :1씩 증가
3.for (int i=1 ; i<=10;i--){..} :1씩 감소
4.for (int i=1 ; i<=10;i+=2){..} :2씩 증가
5.for (int i=1 ; i<=10;i*=3){..} : 3배씩 증가

5)for문은 실습문제
1.for문을 이용해서 1부터 5까지 출력하자
2.for문으로 다섯번 반복하면서 랜덤으로
1부터 5까지 하나만 출력
랜덤 : (int)(Math.random()*마지막값)+초기값
(int)(math.random()*10)+1;
3.1부터 100까지 반복하고 숫자중 짝수의
합계를 구해보자.
1)for문을 2개씩 증가해서 만들수 있다.
2)if 조건문으로 2로 나누면 나머지가 0일경우
짝수라고 판단
*합계를 구해보자 : 짝수를 담을수 있는 변수


-중첩 for문
	1)for 문안에 for문을 포함시킨것이 가능
	(외부for문 > 내부 for문)
	for(int i =2; i<=9; i++){
	for(int j =1; j<=9; j++){
	}
	}
	2) 내부 for문이 끝나야 외부 for  문이 증가한다
	3)구구단을 구하면 알수있다
	4) 중첩 for문 실습문제 
	1. 1차 반복문 (for문을 1개만 이용) 구구단 2단을
	코드로 만들어보자
	2. 2차 반복문으로 2`9단 코드 구구단 코드 짜기
	3. 여러가지 별코드 찍어보기

-while문
-do-while문

@continue
@break
@break와  continue
@이름이 붙은 반복문

@연습문제- 반복문 (응용문제)