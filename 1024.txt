@반복문

반복문은 프로그램코드 안에서 반복적인 명령(패턴)
수행하는 제어 프로그램이다.
반복적으로 코드에[ 개수만큼 출력하는 것이 아니라
출력한느 만큼의 단위를 관꼐연산자의 조건으로
처리를 해준다면 조건만큼 제어하면서 코드를 출력할수 있다

@반복문의 종류
-for문
1) 조건을 만족한는 동안 블록{}반복한다
2) 반복횟수를 알아야 동작한다
3)표현 방법

for(int i =1 ; i<=5; i++){
System.out.println(i);
//1 : 초기값
}
1.초기화식 : 최초 실행시 시작값을 부형하는 방법
2. 조건식 : 반복문으ㅢ 반복수행여부(=true)를
확인하는 식이다/ *조건이 참 이면 계속반복!
3.실행식:반복문의 수행되어야할 명령문이다.
4.증감식:반복문의 수행시 마지막 초기값을 증가하거나 감소시킨다.
4)for문의 다양한 표현방법
1.for ( ; ; ) : 조건식이 항상 true : 무한반복
2.for (int i=1 ; i<=10;i++){..} :1씩 증가
3.for (int i=1 ; i<=10;i--){..} :1씩 감소
4.for (int i=1 ; i<=10;i+=2){..} :2씩 증가
5.for (int i=1 ; i<=10;i*=3){..} : 3배씩 증가

5)for문은 실습문제
1.for문을 이용해서 1부터 5까지 출력하자
2.for문으로 다섯번 반복하면서 랜덤으로
1부터 5까지 하나만 출력
랜덤 : (int)(Math.random()*마지막값)+초기값
(int)(math.random()*10)+1;
3.1부터 100까지 반복하고 숫자중 짝수의
합계를 구해보자.
1)for문을 2개씩 증가해서 만들수 있다.
2)if 조건문으로 2로 나누면 나머지가 0일경우
짝수라고 판단
*합계를 구해보자 : 짝수를 담을수 있는 변수


-중첩 for문
	1)for 문안에 for문을 포함시킨것이 가능
	(외부for문 > 내부 for문)
	for(int i =2; i<=9; i++){
	for(int j =1; j<=9; j++){
	}
	}
	2) 내부 for문이 끝나야 외부 for  문이 증가한다
	3)구구단을 구하면 알수있다
	4) 중첩 for문 실습문제 
	1. 1차 반복문 (for문을 1개만 이용) 구구단 2단을
	코드로 만들어보자
	2. 2차 반복문으로 2`9단 코드 구구단 코드 짜기
	3. 여러가지 별코드 찍어보기

-while문
1) 조건을 만족하는 동안 블록{} 블록 반복한다
2) 조건이 참일경우만 증가하고 증감식은 없다
*for문에 비해 참일경우 while문 구조문 단순하다.
1. 조건식에 의해서 참일경우만 반복이 실행
2. 수행될 문장으로 명령문을 처리한다.
3. 조건식이 증가해야할경우 내부적으로 증가
4. 무한루프 while(1){//실행될문장};
if-->break; 빠져나간다
#while 표현방식

int i =0; // 초기화를 밖에서 해얗나다
while(i<=10){
System.out.println(i);
i++; //for문의 증감식
}

-do-while문
1)블록{}을 무조건 1번 실행문장을 처리한다.
-사용자입력을 받을때 유용하다.
-처음 한번은 무조건 실행 
2)표현 방법
do {
 // 조건식의 연산결과가
// 참일때 수행될 구현부ㅣ
//  while 꼬리야-> 조건과 상관없이 한번은 실행
}while(조건식 ); //while 꼬리로 들어간다
*조건식 끝날때 ; 세미콜론으로 마무리

@continue
1)반복문 내에서만 사용될 수 있고 반복이 진행되는 도중에
 continue문을 만나면 끝으로 이동해서 다음 반복으로
넘어간다.

@break문
1) 자신이 포함된 가장 가까운 반복문을 
벗어난다(중첩 for = 내부for)(일반 for=자신)
2)if문과 함께 사용되고 특정조건을 만족할때
반복문을 벗어나게 된다

@배열의 정의
변수라는 값으로 데이터를 저장하려면 메모리
안에서 연속적으로 값을 삭제하고 다시 추가한다 
자료형변수를 지정하여서 여러 데이터를 
담을수 있는 구조를 자료구조 (data structure)
int arr = {1,2,3,4,5};
*하나의 자료형으로 선언해서 배열을 만든다
1)배열을 선언하는 방법을
자료형 [ ] 배열의 이름=  int [] arr;
자료형 배열이름 [] = int arr[];
*자료형 뒤에 붙이거나 변수명 뒤에 붙혀도 된다
배열이라는 의미로 선언되려면 가독성 높이는
방법 때문에 자료형 뒤에 선언하는것을 선호







