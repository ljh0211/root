자료형 뒤에 붙이거나 변수명 뒤에 붙이면
자료형 배열이다 가독성을 높이는 방법으로 선언\
-기본자료형
int long= 0 
float double =0.0
-참조자료형
자료형 [] 변수이름 = null; // 공간이 있다없다!

2) 배열의 선언과 생성
배열을 선언한것은 배열을 다루는 참조 변수공간만
만들어진것이다 저장할 수 있는 공간을 만들려면 
생성해얗된다 
*배열을 선언한느 방법
int [배열연산자]  arr = new int [배열크기];

*배열선언하고 생성할때 오류
itn [ ] arr;// 배열의 변수를 선언
arr = {1,2,3,4,5 }; // 오류발생 
*배열을 선언즉시 생성을 해야돼 

* 배열선언하고 재정의 방법
int[] arr;
arr =  new int []{1,2,3,4,5}; //베얄 재정의 0

3)배열 메모리 구조
int [] arr = new int[5]; -> 참조변수라서 주소를 축력하면
배열의 위치가 주소값으로 출력된다.

일반변수 : 데이터를 직접 갖고오는 변수
(short/byte/int/double)
참조변수 : 데이터 위치가 주소값을 가지는ㅂ ㅕㄴ수로
해당주소를 접근해서 갖고온다
( String / 배열 / collections/ 객체(object)

4) 배열의 특징 
- 배열 선언후 공간의 크기를 늘리거나 삭제할수없다
-배열 선언 시 크기를 지정한다
(배열의 크기 넣는다/ 배열을 선언즉시생성)
- 자료형 값만 저장할수 있다.

@배열의 구조
1) 인덱스 : 배열의 각 공간의 위치값을 말한다
배열이 지나다니는 위치를 인덱스 (index) 라고
말하며 공간을 숫자로 표현한다
0부터 시작하는 시작의 숫자를 의미하며 
공간의 값을 가져오는 의미는 공간의 첨자 [0]=인덱스를
부여해서 사용한다

2) 배열의 길이 : 배열의 변수가 할당된 크기를 함수
배열의 길이를 함수로 사용한다.
arr.length
System.out.println(arr.length);
int arr_size = arr.length;

3) 배열의 초기값 : 선언을 했을때 자동으로 지정된느 
초기값이다 
정수형 :0 / 실수형 0.0 / 문자형 '' / 객체형 : null

@Array( 배열 출력/ 배열정렬/배열복사)

배열을 간단하게 활용하는 방법을 도와주는 클래스
-배열을 출력 : Arrays.toString(배열)
간단하게 배열의 값을 볼수 있는 방법이다


-배열의 복사 (얕은복사/깊은복사)
1.얕은 복사(shallow copy)
복사된 배열이나 원본 배열이 변경될때 서로간의 값
이변경된다
int [ ] arr01 = {1,2,3};
int [ ] arr02 = arr01;

2. 깊은복사(deep copy)
복사된 배열이나 원본배열이 변경될대 서로간의 값은
바뀌지않는다
- 복사할 배열을 선언하는 방법
int [] card = {1,6,4,5,3,2};
int[] newcard = new int[card.length];
- Arrays.copyof(배열의 이름, 배열길이)
*전체의 배열을 그대로 복사한형태

- System 함수 사용하기
System.arrayCopy(원본,0,복사본,0,배열크기)
*부분복사를 깊은 형태로 새로운 배열을 생성해서 만들수있다 우너본지장ㅂ없음 ㅋ느기를 사용자어응의
-배열의 정렬 (오름차순/내림차순)
오름차순 : 작은값부터 차례대로 정렬한느방법
Arrays.sort(배열이름);

내림차순 : 큰값부터 차례대로 정렬하는 방법
-배열의 검색 (내림차순/오름차순 )

@다차원배열
1)2차원배열을 선언
2차원 배열은 행은 독립된 공간으로 분리ㅏ용된다
행마다 돌깁된 별도의 배열공간을 가진다

1. 2차원 배열의 기본선언방법
int [][] = new int [향의크기[ [열의크기];

2. 2차ㅣ원 배열의 열지정 삭제방식
int p[p[ arr = new intp[커기] [] (조은방법)
int [][] arr = new int[] [얄우ㅢ크기] (나쁜방법)



@향상된 for 문
jdk1.5부터 새롭게 추가된 기능으로 배열과 컬렉션의
모든요소를 참조(python)

@ 클래스 정리
@ 연습문제_교재숙제




